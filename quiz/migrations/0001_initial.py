# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-27 12:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import oauth2client.contrib.django_util.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('messenger', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('fulfilled', 'Fulfilled'), ('broken', 'Broken'), ('not_yet', 'Not Yet'), ('partial', 'Partial')], default='', help_text='Used with kept/broken quiz', max_length=255)),
                ('answer', models.CharField(blank=True, choices=[('agree', 'Agrees'), ('disagree', 'Diagrees')], default='', help_text='Used with voting guide', max_length=255)),
                ('correct_status', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='messenger.ChatSession')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GoogleProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential', oauth2client.contrib.django_util.models.CredentialsField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manuscript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='', max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManuscriptImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('url', models.URLField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('type', models.CharField(choices=[('fulfilled', 'Fulfilled'), ('broken', 'Broken'), ('not_yet', 'Not Yet'), ('partial', 'Partial')], default='fulfilled', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManuscriptItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('button', 'Button'), ('promises', 'Promises'), ('quiz_result', 'Quiz results'), ('text', 'Text'), ('url', 'URL')], default='text', max_length=100)),
                ('order', models.IntegerField(blank=True, default=0)),
                ('text', models.TextField(blank=True, default='')),
                ('button_text', models.TextField(blank=True, default='')),
                ('url', models.URLField(blank=True, default='')),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='quiz.Manuscript')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name_plural': 'Parties',
            },
        ),
        migrations.CreateModel(
            name='Promise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('body', models.TextField()),
                ('external_id', models.IntegerField(unique=True)),
                ('promisor_name', models.CharField(max_length=255)),
                ('parliament_period_name', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, choices=[('fulfilled', 'Fulfilled'), ('broken', 'Broken'), ('not_yet', 'Not Yet'), ('partial', 'Partial')], default='', max_length=255)),
                ('testable', models.BooleanField(default=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='promises', to='quiz.Category')),
                ('parties', models.ManyToManyField(blank=True, related_name='promises', to='quiz.Party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='manuscript',
            name='promises',
            field=models.ManyToManyField(blank=True, to='quiz.Promise'),
        ),
        migrations.AddField(
            model_name='answer',
            name='answer_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quiz.AnswerSet'),
        ),
        migrations.AddField(
            model_name='answer',
            name='promise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.Promise'),
        ),
    ]
